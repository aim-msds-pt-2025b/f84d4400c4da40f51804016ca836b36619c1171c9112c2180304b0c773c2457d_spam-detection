x-airflow-common:
  &airflow-common
  build:
    context: .
    dockerfile: airflow/Dockerfile
  environment:
    &airflow-common-env
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    AIRFLOW__CORE__EXECUTOR: "LocalExecutor"
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: false
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "postgresql://airflow:airflow@postgres:5432/airflow"
    AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW_SECRET_KEY}
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./src:/opt/airflow/src
    - ./data:/opt/airflow/data
    - ./outputs:/opt/airflow/outputs
    - ./models:/opt/airflow/models
    - ./reports:/opt/airflow/reports
  user: "${AIRFLOW_UID:-50000}:0"

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: unless-stopped

  airflow-init:
    <<: *airflow-common
    command: >
      bash -c "
      airflow db init &&
      airflow users create
      --username admin
      --firstname Admin
      --lastname User
      --role Admin
      --email admin@example.com
      --password admin
      "
    depends_on:
      - postgres
    restart: "no"

  airflow-webserver:
    <<: *airflow-common
    command: ["airflow", "webserver", "--port", "8080"]
    environment:
      <<: *airflow-common-env
      AIRFLOW__WEBSERVER__RBAC: "true"
    ports:
      - "8080:8080"
    depends_on:
      - airflow-init
    restart: unless-stopped

  airflow-scheduler:
    <<: *airflow-common
    command: ["airflow", "scheduler"]
    depends_on:
      - airflow-init
      - airflow-webserver
    restart: unless-stopped

volumes:
  pgdata:
